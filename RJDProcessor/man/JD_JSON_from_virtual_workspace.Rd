% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JD_JSON.R
\name{JD_JSON_from_virtual_workspace}
\alias{JD_JSON_from_virtual_workspace}
\title{Turn model spec of a virtual (R) workspace in JD_JSON}
\usage{
JD_JSON_from_virtual_workspace(
  ws,
  ext_reg_input_data_reader,
  JSON_file_name = "JD_JSON_specification.txt",
  diff = TRUE,
  java_processing = TRUE
)
}
\arguments{
\item{ws}{workspace R object.}

\item{ext_reg_input_data_reader}{A Data_reader_ext_reg object, to read the external regressors
in the desired format (csv, xlsx, tramoseats+, ...)}

\item{JSON_file_name}{-optional- Name of the JSON file to be created. If NA the file will be
called "JD_JSON_specification.txt"}

\item{diff}{-optional- if TRUE a reduced version of the JSON specification is produced;
In the reduced version, fields with default values equals to the ones of the
default specification (i.e. "RSA0", "RSA1", ...) are not reported Default=TRUE}

\item{java_processing}{-optional- If TRUE, the function works internally with Java API (faster),
otherwise it uses R API. Default=TRUE}

\item{input_data_reader}{A Data_Reader object}

\item{regr_directory}{-optional- Name of the directory containing the sources (e.g. files)
of the external regressors}
}
\value{
A JSON file saved on the filesystem
}
\description{
This function represent model specifications contained into an R workspace in JD_JSON
}
\examples{

require(RJDemetra)

input_workspace_directory <- system.file("extdata", "WorkspaceTUR-container/workspace-TUR.xml",
                                         package = "RJDProcessor")
input_data_file_name      <- system.file("extdata", "CSV-TUR/grezzi_trim_TUR.csv",
                                          package = "RJDProcessor")
regr_directory            <- system.file("extdata", "CSV-TUR/regr", package = "RJDProcessor")
diff <- TRUE   # Reduced JSON if diff=TRUE, Full JSON format otherwise

input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)

original_directory <- getwd()
extdata_directory <- system.file("extdata", package = "RJDProcessor")
setwd(extdata_directory)

ws <- load_workspace(file = input_workspace_directory)
JD_JSON_from_virtual_workspace(ws, ext_reg_input_data_reader, JSON_file_name = "specifications_new_out.txt", diff=TRUE, java_processing=FALSE)
setwd(original_directory)

}

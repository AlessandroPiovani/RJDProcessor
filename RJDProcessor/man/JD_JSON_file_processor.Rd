% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JD_JSON_file_processor.R
\name{JD_JSON_file_processor}
\alias{JD_JSON_file_processor}
\title{Process a JD_JSON file}
\usage{
JD_JSON_file_processor(
  input_data_reader,
  ext_reg_data_reader,
  spec_file_name,
  output_workspace_dir = NA,
  series_to_proc_names = NA,
  java_processing = TRUE
)
}
\arguments{
\item{input_data_reader}{A specific Data_reader object (CSV, XLSX, ...) to read
the input}

\item{ext_reg_data_reader}{A specific Data_reader_ext_reg object (CSV, XLSX, ...)
to read the external regrssors}

\item{spec_file_name}{Name of the file (with path, if desired) containing the
JD_JSON to be processed (e.g. "specification_new.txt")}

\item{output_workspace_dir}{-optional- Name of the directory that will contain
the output workspace. Default=NA stores the workspace
in a directory called "output_workspace_container"}

\item{series_to_proc_names}{-optional- vector of names of time series to be
processed (e.g. c('VATASA','VATPIA')) .
Default=NA: all the series are processed}

\item{java_processing}{-optional- Default=TRUE. Use only Java API (faster) for
the internal computation}
}
\value{
a virtual workspace, already processed
}
\description{
This function processes a JSON file with JD_JSON fields and returns a virtual
workspace
}
\examples{
require(RJDemetra)
original_directory <- getwd()
extdata_directory  <- system.file("extdata", package = "RJDProcessor")
setwd(extdata_directory)
spec_file_name <- "specifications_to_proc.txt"
input_workspace_directory <- "WorkspaceTUR-container/workspace-TUR.xml"
input_data_file_name      <- "CSV-TUR/grezzi_trim_TUR.csv"
regr_directory            <- "CSV-TUR/regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise

############################# Operational flow ###############################

input_data_reader <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory,
         ext_reg_input_data_reader, JSON_file_name = spec_file_name,
         diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL") # NA to process all
virtual_workspace <- JD_JSON_file_processor(input_data_reader = input_data_reader,
         ext_reg_data_reader = ext_reg_input_data_reader,
         spec_file_name = spec_file_name,
         output_workspace_dir = "output_workspace_container",
         series_to_proc_names = series_to_proc_names,
         java_processing = FALSE)
# set java_processor=TRUE to speed-up the operations, but it does not work with
# workspaces readed by sa-ext plugin
m <- get_model(virtual_workspace) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name)
compare_sa_ts(new_model_workspace = virtual_workspace,
              old_model_workspace = input_workspace_directory ,
              materialized_ws_new=FALSE, materialized_ws_old=TRUE,
              java_processing_old_model=FALSE)
setwd(original_directory)
}

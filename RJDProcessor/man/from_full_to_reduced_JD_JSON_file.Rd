% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JD_JSON.R
\name{from_full_to_reduced_JD_JSON_file}
\alias{from_full_to_reduced_JD_JSON_file}
\title{Print a JSON file with only the fields that differ from the basic spec}
\usage{
from_full_to_reduced_JD_JSON_file(
  JD_JSON_file,
  output_file_name = NA,
  indent = TRUE,
  basic_spec = NA
)
}
\arguments{
\item{JD_JSON_file}{The name of the file in which the JD_JSON will be saved}

\item{output_file_name}{-optional- The name of the file (optionally with path) in
which the JD_JSON will be saved. If NA, the name of the
file will be paste0(JD_DSON_file,"_reduced")}

\item{indent}{-optional- Default TRUE. Print each field of the JSON in a
different row}

\item{basic_spec}{-optional- i.e. "RSA0", "RSA1", ... . Default=NA. If NA,
use the basic spec specified in the input JSON}
}
\value{
Void. A JSON file is saved on the filesystem
}
\description{
This function prints a JSON string that contains only the fields of the JD_JSON object that differ from the ones of the basic specification (i.e. "RSA0, "RSA1", ...)
}
\examples{
require(RJDemetra)
original_directory <- getwd()
extdata_directory <- system.file("extdata", package = "RJDProcessor")
JSON_file_name <- system.file("extdata", "specifications_example3_full.txt",
                               package = "RJDProcessor")
setwd(extdata_directory)
from_full_to_reduced_JD_JSON_file(JSON_file_name, "specification_new_out2.txt")
setwd(original_directory)
}

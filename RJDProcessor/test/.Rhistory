remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release", force = TRUE)
remotes::install_github("rjdemetra/rjd3bench@*release")
library("rjdemetra3")
library("rJava")
library("rjd3bench")
qna_data <- rjd3bench::qna_data
Y<-ts(qna_data$B1G_Y_data$B1G_FF, frequency=1, start=c(2009,1)) # !!!!!!!!!!!!!! Modo che bisognerebbe far funzionare, capendo come caricare l'oggetto time series
# denton PFD without high frequency series
#y1<-rjd3bench::denton(t=Y, nfreq=4)
y1<-denton(t=Y, nfreq=4)
library("rjdemetra3")
library("rJava")
library("rjd3bench")
# override of Denton function. The working function is on the *development repository, but the download does not work.
# The *release repository has a not working version that must be override by this
denton<-function(s=NULL, t, d=1, mul=TRUE, nfreq=4, modified=TRUE,
conversion=c("Sum", "Average", "Last", "First", "UserDefined"),
obsposition=1){
conversion=match.arg(conversion)
jd_t<-rjd3toolkit::.r2jd_tsdata(t)
if (!is.null(s)){
jd_s<-rjd3toolkit::.r2jd_tsdata(s)
} else{
jd_s<-as.integer(nfreq)
}
jd_rslt<-.jcall("jdplus/benchmarking/base/r/Benchmarking", "Ljdplus/toolkit/base/api/timeseries/TsData;", "denton"
,jd_s, jd_t, as.integer(d), mul, modified, conversion, as.integer(obsposition))
rjd3toolkit::.jd2r_tsdata(jd_rslt)
}
library("rjdemetra3")
library("rJava")
library("rjd3bench")
qna_data <- rjd3bench::qna_data
Y<-ts(qna_data$B1G_Y_data$B1G_FF, frequency=1, start=c(2009,1)) # !!!!!!!!!!!!!! Modo che bisognerebbe far funzionare, capendo come caricare l'oggetto time series
# denton PFD without high frequency series
#y1<-rjd3bench::denton(t=Y, nfreq=4)
y1<-denton(t=Y, nfreq=4)
# denton ASD
x1<-y1+rnorm(n=length(y1), mean=0, sd=10)
#y2<-rjd3bench::denton(s=x1, t=Y, d=2, mul=FALSE)
y2<-denton(s=x1, t=Y, d=2, mul=FALSE)
# denton PFD used for temporal disaggregation
x2 <- ts(qna_data$TURN_Q_data[,"TURN_INDEX_FF"], frequency=4, start=c(2009,1))
#y3<-rjd3bench::denton(s=x2, t=Y)
y3<-denton(s=x2, t=Y)
#if ("RJDProcessor" %in% rownames(installed.packages())) {
#  detach("package:RJDProcessor", unload = TRUE)
#}
#install.packages("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor_0.1.0.tar.gz", repos = NULL, type = "source")
library("RJDemetra")
library("RJDProcessor")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\specifications_new_full.txt"
spec_file_name_xlsx            <- "specifications_new_xlsx.txt"
spec_file_name_csv             <- "specifications_new_csv.txt"
input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name_xlsx <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\XLSX-FAS\\grezzi_trim_FAS.xlsx"
input_data_file_name_csv  <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory_xlsx       <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\XLSX-FAS\\regr"
regr_directory_csv        <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
############################## Operational flow ################################
input_data_reader_xlsx         <- Data_reader_xlsx(input_source = input_data_file_name_xlsx)
input_data_reader_csv          <- Data_reader_csv(input_source  = input_data_file_name_csv)
ext_reg_input_data_reader_xlsx <- Data_reader_ext_reg_xlsx(regr_directory_xlsx)
ext_reg_input_data_reader_csv  <- Data_reader_ext_reg_csv(regr_directory_csv)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader_xlsx, JSON_file_name = "specifications_new_xlsx.txt", diff=TRUE, java_processing=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
#input_workspace_directory <- "WorkspaceFAT-container\\WS-FAT.xml"
input_workspace_directory <- "WorkspaceFATfixedCoeff-Container\\WS-FAT-fixed-coef.xml"
#input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\output_workspace_container\\workspace.xml"
input_data_file_name      <- "SITIC-FAT\\grezzi.csv"
regr_directory            <- "SITIC-FAT\\regr"
# input_workspace_directory <- "WorkspaceTUR-container\\workspace-TUR.xml"
# input_data_file_name      <- "SITIC-TUR\\grezziTUR.csv"
# regr_directory            <- "SITIC-TUR\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
############################## Operational flow ################################
input_data_reader         <- Data_reader_csv_istat_format(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_tsplus(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_C", "C_DEFL", "FATEXP_14") #NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace) #get directly the R model (slower)
#m                   <- get_jmodel(virtual_workspace) # faster if you want to work in Java
#m                   <- get_r_model_from_j_model(m)
from_reduced_to_full_JD_JSON_file(spec_file_name)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/RJDProcessor/R/Data_reader_ext_reg_xlsx.R")
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/RJDProcessor/R/Data_reader_ext_reg_xlsx.R")
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/RJDProcessor/R/Data_reader_ext_reg_xlsx.R")
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/RJDProcessor/R/Data_reader_ext_reg_xlsx.R")
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/test/orchestrator_TS.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
#library(RJDProcessor)
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
############################## Operational flow ################################
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
input_data_reader@read_data()
ext_reg_input_data_reader@read_ext_reg_info()
ext_reg_input_data_reader@read_ext_reg_data()
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
ext_reg_input_data_reader@read_ext_reg_data()
ext_reg_input_data_reader@read_ext_reg_info()
regr_directory
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/test/orchestrator_csv_FAS.R")
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/test/orchestrator_csv_FAS.R")
workspace
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
source("C:/Users/UTENTE/Desktop/RJDProcessor_package/test/orchestrator_csv_FAS.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\RJDProcessor\\R")
source("import_and_interface_definition.R")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
#input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\MigrazioneFAT-RJDemetra_TEST_3\\WorkspaceTUR-standard-container\\TUR.xml"
input_workspace_directory <- "WorkspaceTUR-container\\workspace-TUR.xml"
input_data_file_name      <- "XLSX-TUR\\grezzi_trim_TUR.xlsx"
regr_directory            <- "XLSX-TUR\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_xlsx(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_xlsx(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
library("RJDemetra")
library("RJDProcessor")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\specifications_new_full.txt"
spec_file_name_xlsx            <- "specifications_new_xlsx.txt"
spec_file_name_csv             <- "specifications_new_csv.txt"
input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name_xlsx <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\XLSX-FAS\\grezzi_trim_FAS.xlsx"
input_data_file_name_csv  <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory_xlsx       <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\XLSX-FAS\\regr"
regr_directory_csv        <- "C:\\Users\\UTENTE\\Desktop\\RJDProcessor_package\\test\\CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader_xlsx         <- Data_reader_xlsx(input_source = input_data_file_name_xlsx)
input_data_reader_csv          <- Data_reader_csv(input_source  = input_data_file_name_csv)
ext_reg_input_data_reader_xlsx <- Data_reader_ext_reg_xlsx(regr_directory_xlsx)
ext_reg_input_data_reader_csv  <- Data_reader_ext_reg_csv(regr_directory_csv)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader_xlsx, JSON_file_name = "specifications_new_xlsx.txt", diff=TRUE, java_processing=FALSE)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader_csv,  JSON_file_name = "specifications_new_csv.txt",  diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace_csv    <- JD_JSON_file_processor(input_data_reader = input_data_reader_csv, ext_reg_data_reader  = ext_reg_input_data_reader_csv , spec_file_name = spec_file_name_csv,  output_workspace_dir = "output_workspace_container_csv",  series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
virtual_workspace_xlsx   <- JD_JSON_file_processor(input_data_reader = input_data_reader_xlsx, ext_reg_data_reader = ext_reg_input_data_reader_xlsx, spec_file_name = spec_file_name_xlsx, output_workspace_dir = "output_workspace_container_xlsx", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace_csv) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name_csv)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace_csv, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDopenCruncher\\RJDProcessor")
# Assicurati di avere i pacchetti necessari
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
# Carica il pacchetto devtools
library(devtools)
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
devtools::build()
# Controlla il pacchetto
check()
setwd("C:\\Users\\UTENTE\\Desktop\\RJDopenCruncher\\RJDProcessor")
# Assicurati di avere i pacchetti necessari
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
# Carica il pacchetto devtools
library(devtools)
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
devtools::build()
# Controlla il pacchetto
check()
install.packages("C://Users/UTENTE//Desktop/RJDopenCruncher/RJDProcessor_0.1.2.tar.gz", repos = NULL, type = "source")
installed.packages()
install.packages("C://Users/UTENTE//Desktop/RJDopenCruncher/RJDProcessor_0.1.2.tar.gz", repos = NULL, type = "source")
install.packages("C://Users/UTENTE//Desktop/RJDopenCruncher/RJDProcessor_0.1.2.tar.gz", repos = NULL, type = "source")
setwd("C:\\Users\\UTENTE\\Desktop\\RJDopenCruncher\\test")
library(RJDProcessor)
library(RJDemetra)
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name      <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory            <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_csv(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDopenCruncher\\test")
library("RJDProcessor")
library("RJDemetra")
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name_xlsx            <- "specifications_new_xlsx.txt"
spec_file_name_csv             <- "specifications_new_csv.txt"
input_workspace_directory <- "WorkspaceFAS-standard-container\\FAS.xml"
input_data_file_name_xlsx <- "XLSX-FAS\\grezzi_trim_FAS.xlsx"
input_data_file_name_csv  <- "CSV-FAS\\grezzi_trim_FAS.csv"
regr_directory_xlsx       <- "XLSX-FAS\\regr"
regr_directory_csv        <- "CSV-FAS\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader_xlsx         <- Data_reader_xlsx(input_source = input_data_file_name_xlsx)
input_data_reader_csv          <- Data_reader_csv(input_source  = input_data_file_name_csv)
ext_reg_input_data_reader_xlsx <- Data_reader_ext_reg_xlsx(regr_directory_xlsx)
ext_reg_input_data_reader_csv  <- Data_reader_ext_reg_csv(regr_directory_csv)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader_xlsx, JSON_file_name = "specifications_new_xlsx.txt", diff=TRUE, java_processing=FALSE)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader_csv,  JSON_file_name = "specifications_new_csv.txt",  diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace_csv    <- JD_JSON_file_processor(input_data_reader = input_data_reader_csv, ext_reg_data_reader  = ext_reg_input_data_reader_csv , spec_file_name = spec_file_name_csv,  output_workspace_dir = "output_workspace_container_csv",  series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
virtual_workspace_xlsx   <- JD_JSON_file_processor(input_data_reader = input_data_reader_xlsx, ext_reg_data_reader = ext_reg_input_data_reader_xlsx, spec_file_name = spec_file_name_xlsx, output_workspace_dir = "output_workspace_container_xlsx", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace_csv) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name_csv)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace_csv, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)
setwd("C:\\Users\\UTENTE\\Desktop\\RJDopenCruncher\\test\\")
library(RJDProcessor)
library(RJDemetra)
############################### Input defintion ################################
JD_JSON_file_full_reduced <- "specifications_new_full.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "WorkspaceFAT-container\\WS-FAT.xml"
input_data_file_name      <- "SITIC-FAT\\grezzi.csv"
regr_directory            <- "SITIC-FAT\\regr"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv_istat_format(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_tsplus(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
# set java_processor=TRUE to speed-up the operations, but it does not work with workspaces readed by sa-ext plugin
m                    <- get_model(virtual_workspace) #get directly the R model (slower)
from_reduced_to_full_JD_JSON_file(spec_file_name)
from_full_to_reduced_JD_JSON_file(JD_JSON_file = JD_JSON_file_full_reduced)
compare_sa_ts(new_model_workspace = virtual_workspace, old_model_workspace = input_workspace_directory , materialized_ws_new=FALSE, materialized_ws_old=TRUE, java_processing_old_model=FALSE)

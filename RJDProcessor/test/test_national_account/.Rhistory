install.packages("RJDemetra")
install.packages("timeSeries")
install.packages("forecast")
install.packages(c("glue", "magrittr", "rlang"))
rm(list=ls())
#Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_311')
##################################################################
library("rJava")
library("RJDemetra")
library(help="RJDemetra")
setwd("//pc.istat.it/xendesktop/Balbo/lutero/Desktop/RJD")
install.packages(c("cli", "colorspace", "crayon", "curl", "digest", "fansi", "farver", "forecast", "fracdiff", "ggplot2", "glue", "gtable", "isoband", "lifecycle", "lmtest", "magrittr", "pillar", "quantmod", "RColorBrewer", "Rcpp", "RcppArmadillo", "RJDemetra", "rlang", "scales", "tibble", "timeDate", "timeSeries", "tseries", "urca", "vctrs", "viridisLite", "withr", "xts", "zoo"))
remotes::install_github("palatej/rjd3toolkit")
remotes::install_github("palatej/rjd3modelling")
remotes::install_github("palatej/rjd3sa")
remotes::install_github("palatej/rjd3arima")
remotes::install_github("palatej/rjd3x13")
remotes::install_github("palatej/rjd3tramoseats")
remotes::install_github("palatej/rjdemetra3")
install.packages("remotes")
remotes::install_github("palatej/rjd3toolkit")
remotes::install_github("palatej/rjd3modelling")
remotes::install_github("palatej/rjd3sa")
remotes::install_github("palatej/rjd3arima")
remotes::install_github("palatej/rjd3x13")
remotes::install_github("palatej/rjd3tramoseats")
remotes::install_github("palatej/rjdemetra3")
remotes::install_github("palatej/rjd3toolkit")
install.packages(c("cli", "xts", "zoo"))
install.packages("data.table")
library(help="data.table")
library(data.table)
x=matrix(runif(500000),500,1000)
x
data.frame(v1=1:10,v2=c("a","a","b","b","a","a","a","c","c","b"))
y=data.frame(v1=1:10,v2=c("a","a","b","b","a","a","a","c","c","b"))
str(y)
mean($v1)
mean(v1)
mean(y$v1)
mean((y$v1=="a")
)
mean((y$v1=="a"))
if(y$v2=="a") mean((y$v1)
)
if(y$v2=="a") mean((y$v1))
print(y[1:5,])
mean((y$v2=="a"))
mean(y$v1[y$v2=="a"])
31/5
21/5
x=read.csv2(file="C:\Users\UTENTE\Desktop\OneDrive_1_17-4-2023\smallerdatafile.csv")
x=read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv")
x
x=read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=",")
View(x)
x=data.table(x)
str(x)
mode(x)
class(x)
x=asdatatable(read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=","))
x=as.datatable(read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=","))
x=as.data.table(read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=","))
class(x)
mode(x)
str(x)
View(x)
View(x)
rm(x)
x=as.data.table(read.csv2(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=","))
str(x)
x[1,]
x[1:,]
x$1:
class(x)
x[,2]
is.data.table(x)
x[[,2]]
x[[2]]
x[1,]
x[1:1000,mean,x[,9]==2011]
x[1:1000,mean,x[,10]==2011]
rownames(x)
colnames(x)
x:1
x[1]
x[2]
x[,2]
x[,11]
x[,12]
x[,13]
colnames(x)
dim(x)
summary(x)
length(x)
dim(x)
cars
cars=data.table(cars)
as.data.table
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=",")
x
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header=auto,sep=",")
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
colnames(x)
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
x[1,]
system.time(read.table(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv),header=T)
)
)
))))
)))
%
??
((((()))))
''
)
)
x
str(x)
class(x)
x
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=",")
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",sep=","))
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv")
library(data.table)
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
x
fread
x
dim(x)
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=";")
x
dim(x)
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
x
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c(1,2,6,11))
x=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",")
z=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c(1,2,6,11))
z
dim(z)
system.time(fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c(1,2,6,11)))
system.time(fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=","))
z=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c("Unit","Value"))
z
dim(z)
z=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c(5,3,1))
z
z=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c("Unit","Value"),colClasses = "character")
z
z=fread(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/smallerdatafile.csv",header="auto",sep=",",select=c("Unit","Value"),colClasses = c(Value="numeric",Unit="character"))
z
z=fwrite(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/dioporco.txt)
""
)
""
z=fwrite(file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/dioporco.txt")
z=fwrite(z,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/dioporco.txt")
app=fread(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",select=c(3,20))
app=fread(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",select=c(3,20))
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=1:10,select=c(3,20))
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10,select=c(3,20))
app=ftable("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10,select=c(3,20))
app=ftable(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10,select=c(3,20))
app=ftable(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10)
ap=ftable(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10)
ap
fwrite(ap,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.txt")
ap
app=ftable(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app
app=ftable("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app
app=ftable(url="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app
app=fread(file="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread(url="https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10)
app
fwrite(app,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.txt")
fwrite(app,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.csv")
fwrite(app,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.html")
fwrite(app,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.xlsx")
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10)
app=fread("https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv",nrows=10)
app
fwrite(app,file="C:/Users/UTENTE/Desktop/OneDrive_1_17-4-2023/prova.html")
colnames(app)
x
sel.x=x[Unit="Tonnes"]
sel.x=x[Unit=="Tonnes"]
sel.x
x
colnames(x)
sel.x=x[Unit=="tonnes"]
sel.x
x
sel.x=x[Unit=="tonnes" & Element!="Import Value"]
sel.x
sel.x=x[order(Year)]
sel.x
sel.x=x[order(-Value)]
sel.x
sel.x=x[order(-Year)]
sel.x
sel.x=x[order(-Value)]
sel.x=x[order(Year,-Value)]
sel.x
x[,Year]
x[,list(Value)]
x[,list(Value,Year)]
x[1:10,list(Value,Year)]
View(x)
View(x)
x[1:10,list(Value,Year),Import Value]
x[1:10,list(Value,Year),"Import Value"]
x[1:10,list(Value,Year),Element="Import Value"]
x[1:10,list(Value,Year),Element=="Import Value"]
x[,list(Value,Year),Element=="Import Value"]
x[1:100,list(Value,Year),Element=="Import Value"]
x[1:10,.(Value,Year)]
x[,.(Value,Year)]
x[,.(val=Value,y=Year)]
x[3,Value,with=F]
x[3,Value,with=FALSE]
x[3,"Value",with=FALSE]
x[,!c("Unit"),with=FALSE]
x[3,Value,with=FALSE]
x[3,"Value",with=FALSE]
x[,sum(Value)]
x[1:10,sum(Value)]
x[1:10,.sum(Value)]
x[1:10,.(sum(Value))]
x[,.(sum(Value)),min(Year)]
x[,.(sum(Value),min(Year))]
x[,.(unique(Value))]
x[,.(sum(Value),min(Year))]
x[,.(sum(Value),max(Year))]
x[,.(sum(Value),Year=="1987")]
x[,.(sum(Value),Year=="1987")]
x[,.(sum(Value),max(Year))]
x[,.(mean(Value),min(Year),std(ElementCode))]
x[,.(mean(Value),min(Year),sd(ElementCode))]
x[,.(media=mean(Value),mini=min(Year),dev=sd(ElementCode))]
x[,.(media=mean(Value),mini=min(Year),dev=sd(ElementCode),med=median(Value))]
x[,.(media=mean(Value),mini=min(Year),dev=sd(ElementCode),med=median(Value))]
x[,.(Value,mean(Value),sd(Value))]
DT[1:200, .(plot(Value),max(Value),pippo=min(Year)) ]
x[1:200, .(plot(Value),max(Value),pippo=min(Year)) ]
x[1:200, .(plot(Value),max(Value),pippo=min(Year)) ]
x[1:200,.(plot(Value),max(Value),pippo=min(Year))]
windows()
x[1:200,.(plot(Value),max(Value),pippo=min(Year))]
x[Element=="Import Value", . (sum(Value), min(Year)) ]
library(xml2)
library(help=xml2)
install.packages("devtools")
devtools::install_github("InseeFrLab/rjdworkspace")
library(rjdworkspace)
library(help=rjdworkspace)
?replace_series
663872/3
1220552/9
(1220552/9)*0.65
((1220552/9)*0.65)/12
((1220552/14)*0.65)/12
install.packages("C:/Users/UTENTE/Desktop/JDCruncheR-0.2.4.zip", repos = NULL, type = "win.binary")
install.packages("Rtools")
install.packages(c("askpass", "bslib", "cachem", "cpp11", "credentials", "curl", "digest", "downlit", "evaluate", "fontawesome", "forecast", "fs", "gert", "ggplot2", "gtable", "htmltools", "httr", "jsonlite", "knitr", "labeling", "markdown", "MatrixModels", "openssl", "pkgbuild", "pkgload", "prettyunits", "processx", "promises", "ps", "psych", "purrr", "quantmod", "quantreg", "Rcpp", "RcppArmadillo", "remotes", "rjdmarkdown", "rlang", "rmarkdown", "rstudioapi", "sass", "shiny", "sys", "testthat", "tinytex", "tseries", "usethis", "vctrs", "viridisLite", "webshot", "withr", "xfun", "xml2", "xts"))
install.packages("C:/Users/UTENTE/Desktop/JDCruncheR-0.2.4.zip", repos = NULL, type = "win.binary")
install.packages("Rtools")
install.packages("C:/Users/UTENTE/Desktop/JDCruncheR-0.2.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/UTENTE/Desktop/JDCruncheR-0.2.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/UTENTE/Desktop/Downloads/rjdemetra3_3.2.0.zip", repos = NULL, type = "win.binary")
library(rjdemetra3)
install.packages(c("bslib", "curl", "evaluate", "fansi", "ggplot2", "htmltools", "htmlwidgets", "httpuv", "httr2", "knitr", "lifecycle", "markdown", "Matrix", "MatrixModels", "ragg", "RcppArmadillo", "RJDemetra", "rjdmarkdown", "rlang", "rprojroot", "shiny", "stringi", "stringr", "svglite", "systemfonts", "testthat", "textshaping", "tinytex", "utf8", "vctrs", "waldo", "withr", "xfun"))
install.packages("C:/Users/UTENTE/Desktop/Downloads/rjdemetra3_3.2.0.zip", repos = NULL, type = "win.binary")
library(rjdemetra3)
library("remotes")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3tramoseats@*release")
remotes::install_github("rjdemetra/rjd3x13@*release")
remotes::install_github("rjdemetra/rjd3providers@*release")
remotes::install_github("rjdemetra/rjdemetra3@*release")
remotes::install_github("rjdemetra/rjd3x13@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
usethis::create_github_token()
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
usethis::edit_r_environ()
remotes::install_github("rjdemetra/rjd3toolkit@*release")
install.packages("remotes")
install.packages("devtools")
install.packages("rJava")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3tramoseats@*release")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
java -version
java
#Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_311')
##################################################################
library("rJava")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
install.packages("RJDemetra")
library("rJava")
library("RJDemetra")
library("rjdmarkdown")
remotes::install_github("rjdemetra/rjd3toolkit@*release")
library(rJava)
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
library(rjd3bench)
library(help=rjd3bench)
?denton
library(help=rjd3toolkit)
?ucarima_wk
library(rjd3toolkit)
?ucarima_wk
library(help=rjd3tramoseats)
tramoseats_dictionary
library(rjd3tramoseats)
tramoseats_dictionary
?tramoseats_dictionary
tramoseats_dictionary()
userdefined_variables_tramoseats()
userdefined_variables_tramoseats()
library(rjd3tramoseats)
Sys.setenv
?Sys.setenv
remotes::install_github("rjdemetra/rjd3toolkit@*release")
remotes::install_github("rjdemetra/rjd3providers@*release")
install.packages(c("brio", "bslib", "cli", "cpp11", "curl", "data.table", "desc", "fansi", "gam", "gert", "htmlwidgets", "httpuv", "jsonlite", "later", "markdown", "Matrix", "pkgbuild", "processx", "ragg", "RcppArmadillo", "RProtoBuf", "sass", "scales", "stringi", "svglite", "testthat", "tseries", "TTR", "vctrs", "xml2", "yaml"))
install.packages(c("ragg", "stringi", "tinytex"))
install.packages("C:/Users/UTENTE/Desktop/rjdhf_0.0.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/UTENTE/Desktop/RJDProcessor_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("rjson")
install.packages("C:/Users/UTENTE/Desktop/RJDProcessor_0.1.0.tar.gz", repos = NULL, type = "source")
library("RJDProcessor")
library(help="RJDProcessor")
RJDProcessor::
############################### Input defintion ################################
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP\\expb24.xml"
spec_file_name            <- "specifications_new.txt"
spec_file_name            <- "specifications_new.txt"
spec_file_name            <- "specifications_new.txt"
spec_file_name            <- "specifications_new.txt"
input_workspace_directory <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP\\expb24.xml"
input_data_file_name      <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP\\expb24.csv"
regr_directory            <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP\\REGR"
diff <- TRUE # Reduced JSON if diff=TRUE, Full JSON format otherwise
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_tsplus(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
library()
library("RJDemetra")
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
regr_directory            <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP"
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
input_data_reader         <- Data_reader_csv(input_source = input_data_file_name)
ext_reg_input_data_reader <- Data_reader_ext_reg_tsplus(regr_directory)
JD_JSON_from_materialized_workspace(input_workspace_directory, ext_reg_input_data_reader, JSON_file_name = "specifications_new.txt", diff=TRUE, java_processing=FALSE)
getwd()
############################### Input defintion ################################
setwd("C:\\Users\\UTENTE\\Desktop\\prova_RJDP")
series_to_proc_names <- NA #c("FATEXP_13", "C_DEFL", "FATEXP_14") # NA to process all the series #NA
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
spec_file_name            <- "C:\\Users\\UTENTE\\Desktop\\prova_RJDP\\specifications_new.txt"
virtual_workspace    <- JD_JSON_file_processor(input_data_reader = input_data_reader, ext_reg_data_reader = ext_reg_input_data_reader, spec_file_name = spec_file_name, output_workspace_dir = "output_workspace_container", series_to_proc_names = series_to_proc_names, java_processing = TRUE) # = NA) #output_workspace_dir can be omitted
RJDProcessor::from_reduced_to_full_JD_JSON_file()
RJDProcessor::from_reduced_to_full_JD_JSON_file(spec_file_name)

getwd()
devtools::load_all(".")
devtools::load_all(".")
# Assicurati di avere i pacchetti necessari
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
# Carica il pacchetto devtools
library(devtools)
# Genera la documentazione
document()
# Costruisci il pacchetto
build()
# Controlla il pacchetto
check()
# Carica il pacchetto devtools
library(devtools)
# Costruisci il pacchetto
build(document=FALSE)
# Costruisci il pacchetto
devtools::build(document=FALSE)
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
build()
install.packages("C:/Users/UTENTE/Documents/RJDProcessor_0.1.0.tar.gz", repos = NULL, type = "source")
# Genera la documentazione
devtools::document()
# Carica il pacchetto devtools
library(devtools)
devtools::load_all("R/00-init.R")
# Assicurati di avere i pacchetti necessari
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
# Carica il pacchetto devtools
library(devtools)
devtools::load_all("R/00-init.R")
# Carica il pacchetto devtools
library(devtools)
devtools::load_all("R/00-init.R")
devtools::load_all("R/import_and_interface_definition.R")
devtools::load_all("R/import_and_interface_definition.R")
devtools::load_all("R/import_and_interface_definition.R")
# Interfaces for Data_reader and Data_reader_ext_reg
setGeneric("read_data", function(object, ...) standardGeneric("read_data"))
#
source("Data_reader_xlsx.R")
# Basic import
library(RJDemetra)
library(rjson)
# Interfaces for Data_reader and Data_reader_ext_reg
setGeneric("read_data", function(object, ...) standardGeneric("read_data"))
setGeneric("read_ext_reg_data", function(object, var_info=NULL, time_series_info=NULL, frequency= NA_integer_, ...) standardGeneric("read_ext_reg_data"))
setGeneric("read_ext_reg_info", function(object, var_info_container, ...) standardGeneric("read_ext_reg_info"))
devtools::load_all(".")
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
rlang::last_trace()
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
devtools::build(document=FALSE)
# Costruisci il pacchetto
devtools::build()
# Controlla il pacchetto
check()
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
devtools::build()
# Controlla il pacchetto
devtools::check()
install.packages(RJDeme)
"RJDemetra"
install.packages("RJDemetra")
RJDemetra::
help(RJDemetra)
??RJDemetra
packageVersion("RJDemetra")
packageVersion("rjson")
packageVersion("rjava")
# Carica il pacchetto devtools
library(devtools)
devtools::load_all("R/import_and_interface_definition.R")
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
packageVersion("rjava")
# Genera la documentazione
devtools::document()
# Genera la documentazione
devtools::document()
# Costruisci il pacchetto
devtools::build()
# Controlla il pacchetto
check()
